/songs:
  get:
    queryParameters:
      genre:
        description: filter the song by genre
    responses:
      200:
        body:
          application/json:
            schema: |
              { "$schema": "http://json-schema.org/schema",
                "type": "array",
                "items" : {
                  "type" : "object",
                  "description": "A canonical song",
                  "properties": {
                    "title": { "type": "string" },
                    "artist": { "type": "string"}
                  },
                  "required": [ "title", "artist" ]
                }
              }
  post:
  /{songId}:
    get:
      responses:
        200:
          body:
            application/json:
              schema: |
                { "$schema": "http://json-schema.org/schema",
                  "type": "object",
                  "description": "A canonical song",
                  "properties": {
                    "title": { "type": "string" },
                    "artist": { "type": "string"}
                  },
                  "required": [ "title", "artist" ]
                }
    delete:
      description: |
        This method will *delete* an **individual song**
/users:
 get:
  responses:
   200:
    body:
     application/json:
      schema: |
         {
            "$schema": "http://json-schema.org/schema",
                      "type": "array",
                      "items" : {
                        "type" : "object",
                        "description": "user list",
                        "properties": {
                          "userId": { "type": "string" },
                          "name": { "type": "string"},
                          "email":  {"type": "string"}
                        },
                        "required": [ "userId", "name" ]
                      }
         }
